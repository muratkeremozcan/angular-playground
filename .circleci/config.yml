# Converting the original GitLab yml to CircleCI is WIP

# see orb options at
# https://github.com/cypress-io/circleci-orb
version: 2.1
orbs:
  cypress: cypress-io/cypress@1.27.0

executors:
  latest:
    docker:
      - image: cypress/included:7.3.0

commands:
  save-partial-coverage-report:
    description: |
      Saves a single possibly partial coverage report by adding it to the
      workspace. This way different CircleCI jobs can run parts of the tests
      and save their results to be merged later.
    parameters:
      coverage-filename:
        type: string
        default: coverage-e2e/coverage-final.json
        description: |
          Path to the final coverage JSON file produced by "nyc" tool.
          Typically called "coverage-e2e/coverage-final.json"
      label:
        type: string
        default: default
        description: |
          Human name for the coverage file. For example, when saving both Cypress
          and Jest coverage file, use "cypress" and "jest" to have distinct filenames.
    steps:
      # do not crash if the coverage is not found
      # because a particular CI job might not have any tests to run
      # producing no coverage.
      - run: mkdir coverage-part || true
      - run: touch coverage-part/.placeholder || true
      # use unique job id to avoid accidentally overwriting coverage file
      # and in case the build is parallel, use node index too
      - run: cp <<parameters.coverage-filename>> coverage-part/coverage-<<parameters.label>>-$CIRCLE_WORKFLOW_JOB_ID-index-$CIRCLE_NODE_INDEX.json || true
      - run: ls -la coverage-part
      - persist_to_workspace:
          root: ~/
          paths:
            # note that the current folder is "project"
            # so we need to save the full path correctly
            # otherwise the files will not be restored in the expected location
            - 'project/coverage-part/*'

  merge-coverage-reports:
    description: |
      Merges individual code coverage files using "nyc" tool
      https://github.com/istanbuljs/nyc.
      All individual files should be in the folder "coverage-part"
    steps:
      - run: ls -la .
      - run: ls -la coverage-part || true
      - run : mkdir reports
      - run : cp -r coverage-part/. reports
      - run : cp coverage/coverage-final.json reports/from-jest.json
      - run: npx nyc merge reports
      - run: rm -rf .nyc_output # to counter the CI flake https://github.com/istanbuljs/istanbuljs/issues/572
      - run: mkdir .nyc_output || true
      - run: mv coverage.json .nyc_output/out.json
      - run: ls -la reports


jobs:
  merge-coverage:
    description: Merges individual code coverage files and sends combined data to Coveralls.io
    executor: latest
    steps:
      - attach_workspace:
          at: ~/
      - merge-coverage-reports
      - run:
          name: generate coverage report
          # it appears that lcov report can flake ttps://github.com/istanbuljs/istanbuljs/issues/572, therefore using html report
          command: |
            npx nyc report \
              --reporter html --reporter text-summary \
              --report-dir combined-coverage
      - store_artifacts:
          path: combined-coverage

workflows:
  build:
    jobs:
      - cypress/install:
          executor: latest
          install-command: npm ci
          post-steps:
            - run:
                name: Run lint
                command: npm run lint
            - run:
                name: Run Unit Tests
                command: npm run test
            - store_artifacts:
                path: coverage
            - persist_to_workspace:
                root: ~/
                paths:
                  # note that the current folder is "project"
                  # so we need to save the full path correctly
                  # otherwise the files will not be restored in the expected location
                  - 'project/coverage/*'

      - cypress/run:
          requires:
            - cypress/install
          browser: chrome
          executor: latest
          record: true
          parallel: true
          parallelism: 2
          group: 'all tests'
          start: npm start
          wait-on: 'http://localhost:4200'
          post-steps:
            - store_artifacts:
                path: coverage-e2e
            # if this machine had no tests to run there will be no coverage report
            - run: npx nyc report --reporter=text || true
            - save-partial-coverage-report:
                label: e2e

      - merge-coverage:
          requires:
            - cypress/run
